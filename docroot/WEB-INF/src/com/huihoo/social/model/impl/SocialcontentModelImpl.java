/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.huihoo.social.model.impl;

import com.huihoo.social.model.Socialcontent;
import com.huihoo.social.model.SocialcontentModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;

/**
 * The base model implementation for the Socialcontent service. Represents a row in the &quot;huihoo_app_socialcontent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.huihoo.social.model.SocialcontentModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SocialcontentImpl}.
 * </p>
 *
 * @author Baihua Huang
 * @see SocialcontentImpl
 * @see com.huihoo.social.model.Socialcontent
 * @see com.huihoo.social.model.SocialcontentModel
 * @generated
 */
public class SocialcontentModelImpl extends BaseModelImpl<Socialcontent>
	implements SocialcontentModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a socialcontent model instance should use the {@link com.huihoo.social.model.Socialcontent} interface instead.
	 */
	public static final String TABLE_NAME = "huihoo_app_socialcontent";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "portraitUrl", Types.VARCHAR },
			{ "screenName", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "type_", Types.INTEGER },
			{ "content", Types.VARCHAR },
			{ "createdAt", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table huihoo_app_socialcontent (id_ LONG not null primary key,userId LONG,portraitUrl VARCHAR(75) null,screenName VARCHAR(75) null,companyId LONG,groupId LONG,type_ INTEGER,content VARCHAR(75) null,createdAt DATE null)";
	public static final String TABLE_SQL_DROP = "drop table huihoo_app_socialcontent";
	public static final String ORDER_BY_JPQL = " ORDER BY socialcontent.createdAt DESC";
	public static final String ORDER_BY_SQL = " ORDER BY huihoo_app_socialcontent.createdAt DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.huihoo.social.model.Socialcontent"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.huihoo.social.model.Socialcontent"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.huihoo.social.model.Socialcontent"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.huihoo.social.model.Socialcontent"));

	public SocialcontentModelImpl() {
	}

	public long getPrimaryKey() {
		return _id;
	}

	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Socialcontent.class;
	}

	public String getModelClassName() {
		return Socialcontent.class.getName();
	}

	public long getId() {
		return _id;
	}

	public void setId(long id) {
		_id = id;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public String getPortraitUrl() {
		if (_portraitUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _portraitUrl;
		}
	}

	public void setPortraitUrl(String portraitUrl) {
		_portraitUrl = portraitUrl;
	}

	public String getScreenName() {
		if (_screenName == null) {
			return StringPool.BLANK;
		}
		else {
			return _screenName;
		}
	}

	public void setScreenName(String screenName) {
		_screenName = screenName;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	public int getType() {
		return _type;
	}

	public void setType(int type) {
		_type = type;
	}

	public String getContent() {
		if (_content == null) {
			return StringPool.BLANK;
		}
		else {
			return _content;
		}
	}

	public void setContent(String content) {
		_content = content;
	}

	public Date getCreatedAt() {
		return _createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		_columnBitmask = -1L;

		_createdAt = createdAt;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public Socialcontent toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Socialcontent)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					Socialcontent.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		SocialcontentImpl socialcontentImpl = new SocialcontentImpl();

		socialcontentImpl.setId(getId());
		socialcontentImpl.setUserId(getUserId());
		socialcontentImpl.setPortraitUrl(getPortraitUrl());
		socialcontentImpl.setScreenName(getScreenName());
		socialcontentImpl.setCompanyId(getCompanyId());
		socialcontentImpl.setGroupId(getGroupId());
		socialcontentImpl.setType(getType());
		socialcontentImpl.setContent(getContent());
		socialcontentImpl.setCreatedAt(getCreatedAt());

		socialcontentImpl.resetOriginalValues();

		return socialcontentImpl;
	}

	public int compareTo(Socialcontent socialcontent) {
		int value = 0;

		value = DateUtil.compareTo(getCreatedAt(), socialcontent.getCreatedAt());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Socialcontent socialcontent = null;

		try {
			socialcontent = (Socialcontent)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = socialcontent.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SocialcontentModelImpl socialcontentModelImpl = this;

		socialcontentModelImpl._originalCompanyId = socialcontentModelImpl._companyId;

		socialcontentModelImpl._setOriginalCompanyId = false;

		socialcontentModelImpl._originalGroupId = socialcontentModelImpl._groupId;

		socialcontentModelImpl._setOriginalGroupId = false;

		socialcontentModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Socialcontent> toCacheModel() {
		SocialcontentCacheModel socialcontentCacheModel = new SocialcontentCacheModel();

		socialcontentCacheModel.id = getId();

		socialcontentCacheModel.userId = getUserId();

		socialcontentCacheModel.portraitUrl = getPortraitUrl();

		String portraitUrl = socialcontentCacheModel.portraitUrl;

		if ((portraitUrl != null) && (portraitUrl.length() == 0)) {
			socialcontentCacheModel.portraitUrl = null;
		}

		socialcontentCacheModel.screenName = getScreenName();

		String screenName = socialcontentCacheModel.screenName;

		if ((screenName != null) && (screenName.length() == 0)) {
			socialcontentCacheModel.screenName = null;
		}

		socialcontentCacheModel.companyId = getCompanyId();

		socialcontentCacheModel.groupId = getGroupId();

		socialcontentCacheModel.type = getType();

		socialcontentCacheModel.content = getContent();

		String content = socialcontentCacheModel.content;

		if ((content != null) && (content.length() == 0)) {
			socialcontentCacheModel.content = null;
		}

		Date createdAt = getCreatedAt();

		if (createdAt != null) {
			socialcontentCacheModel.createdAt = createdAt.getTime();
		}
		else {
			socialcontentCacheModel.createdAt = Long.MIN_VALUE;
		}

		return socialcontentCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", portraitUrl=");
		sb.append(getPortraitUrl());
		sb.append(", screenName=");
		sb.append(getScreenName());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", content=");
		sb.append(getContent());
		sb.append(", createdAt=");
		sb.append(getCreatedAt());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.huihoo.social.model.Socialcontent");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>portraitUrl</column-name><column-value><![CDATA[");
		sb.append(getPortraitUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>screenName</column-name><column-value><![CDATA[");
		sb.append(getScreenName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>content</column-name><column-value><![CDATA[");
		sb.append(getContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdAt</column-name><column-value><![CDATA[");
		sb.append(getCreatedAt());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Socialcontent.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Socialcontent.class
		};
	private long _id;
	private long _userId;
	private String _userUuid;
	private String _portraitUrl;
	private String _screenName;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private int _type;
	private String _content;
	private Date _createdAt;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private Socialcontent _escapedModelProxy;
}